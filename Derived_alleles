#Rscript which can take the output from our modified GERPcol and pull out all derived alleles for each individual in a VCF file.
#The R script is using three outgroup species, Odocoileus_virginianus, Alces_alces, and Cervus_elaphus, whose alleles at each site were output from our modified GERPcol script.
#Need to enter the VCF file name and path, as well as the 'rates' filename, and desired output name.
#The version here will output all scores. If want all scores over a certain value then modify the line:
  filter(V2 != -1)
#Which set as it is removes missing data lines from the previous script but leaves everything else in, to:
  filter(V2 > 0)
#To be any site with a  positive score, for example. 
#I used this to pull out derived sites from the SnpEff VCF file as well as this script can be used to pull out derived alleles from a VCF file for other purposes as well.

library(vcfR)
library(tidyverse)
library(data.table)
library(magrittr)
library(parallel)

vcf <- read.vcfR("/home/beckyt/projects/rrg-pawilson/beckyt/GERP/genomes/Derived_All_NoMissing/Mar2022_66Caribou_Scaff14_NoMissing_Annotated.recode.vcf.gz")
vcf_field_names(vcf, tag = "FORMAT")
Z <- vcfR2tidy(vcf, format_fields = c("GT", "DP"))
gt2 = Z$gt

gt2 %<>%
  filter(!str_detect(gt_GT_alleles, "\\*")) %>%
  mutate("ref" = str_remove(gt_GT_alleles, "(/|\\|).$"),
         "tar" = str_remove(gt_GT_alleles, "^.(/|\\|)"));

sca = fread("../Scaffold14_5000_supp_filtered_sorted_formatted.fasta.rates", nThread = 8) %>%
  mutate(Pos = Pos + 1) %>%
  filter(V2 != -1)

sams = gt2$Indiv %>% unique();

out = parallel::mclapply(seq_len(length(sams)),
                         FUN = function(i){
                           system(sprintf('echo "processing %s\n"', sams[i]));

                           gt2 %>%
                             filter(Indiv == sams[i]) %>%
                             select(POS, ref, tar) -> tmp;

                           sca %>%
                             filter(Pos %in% tmp$POS) -> tmp2;

                           left_join(tmp2, tmp, by = c("Pos" = "POS")) %>%
                             filter((tar !=  Odocoileus_virginianus &
                                      tar != Alces_alces &
                                      tar != Cervus_elaphus) |
                                      (ref !=  Odocoileus_virginianus &
                                      ref != Alces_alces &
                                      ref != Cervus_elaphus)) %>%
                             mutate("sam" = sams[i]) -> out;

                           fwrite(out, paste0(i, "_Scaffold14_all.txt"));#write to drive

                           return(out);
                         }, mc.preschedule = F, mc.cores = 8)#change mc.cores to number of threads, if you use windows, put mc.cores = 1;

